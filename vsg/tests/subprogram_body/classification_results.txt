--------------------------------------------------------------------------------
0 | None | 
--------------------------------------------------------------------------------
1 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | None | architecture RTL of FIFO is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 | None |   procedure PARITY
<class 'vsg.token.procedure_specification.procedure_keyword'>
<class 'vsg.token.procedure_specification.designator'>
--------------------------------------------------------------------------------
5 | None |    (signal X : in std_logic_vector;
<class 'vsg.token.procedure_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
6 | None |     signal Y : out std_logic) is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.procedure_specification.close_parenthesis'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
7 | None |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
8 | None |    end procedure PARITY;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_kind.procedure_keyword'>
<class 'vsg.token.subprogram_body.designator'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
9 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
10 | None |   procedure PARITY
<class 'vsg.token.procedure_specification.procedure_keyword'>
<class 'vsg.token.procedure_specification.designator'>
--------------------------------------------------------------------------------
11 | None |    (signal X : in std_logic_vector;
<class 'vsg.token.procedure_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
12 | None |     signal Y : out std_logic) is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.procedure_specification.close_parenthesis'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
13 | None |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
14 | None |    end procedure;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_kind.procedure_keyword'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
15 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
16 | None |   procedure PARITY
<class 'vsg.token.procedure_specification.procedure_keyword'>
<class 'vsg.token.procedure_specification.designator'>
--------------------------------------------------------------------------------
17 | None |    (signal X : in std_logic_vector;
<class 'vsg.token.procedure_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
18 | None |     signal Y : out std_logic) is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.procedure_specification.close_parenthesis'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
19 | None |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
20 | None |    end PARITY;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_body.designator'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
21 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
22 | None |   procedure PARITY
<class 'vsg.token.procedure_specification.procedure_keyword'>
<class 'vsg.token.procedure_specification.designator'>
--------------------------------------------------------------------------------
23 | None |    (signal X : in std_logic_vector;
<class 'vsg.token.procedure_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
24 | None |     signal Y : out std_logic) is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.procedure_specification.close_parenthesis'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
25 | None |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
26 | None |    end;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
27 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
28 | None |   function PARITY
<class 'vsg.token.function_specification.function_keyword'>
<class 'vsg.token.function_specification.designator'>
--------------------------------------------------------------------------------
29 | None |    (signal X : in std_logic_vector;
<class 'vsg.token.function_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
30 | None |     signal Y : out std_logic) return integer is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.function_specification.close_parenthesis'>
<class 'vsg.token.function_specification.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
31 | None |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
32 | None |    end function PARITY;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_kind.function_keyword'>
<class 'vsg.token.subprogram_body.designator'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
33 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
34 | None |   function PARITY
<class 'vsg.token.function_specification.function_keyword'>
<class 'vsg.token.function_specification.designator'>
--------------------------------------------------------------------------------
35 | None |    (signal X : in std_logic_vector;
<class 'vsg.token.function_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
36 | None |     signal Y : out std_logic) return string is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.function_specification.close_parenthesis'>
<class 'vsg.token.function_specification.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
37 | None |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
38 | None |    end function;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_kind.function_keyword'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
39 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
40 | None |   function PARITY
<class 'vsg.token.function_specification.function_keyword'>
<class 'vsg.token.function_specification.designator'>
--------------------------------------------------------------------------------
41 | None |    (signal X : in std_logic_vector;
<class 'vsg.token.function_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
42 | None |     signal Y : out std_logic) return natural is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.function_specification.close_parenthesis'>
<class 'vsg.token.function_specification.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
43 | None |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
44 | None |    end PARITY;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_body.designator'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
45 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
46 | None |   function PARITY
<class 'vsg.token.function_specification.function_keyword'>
<class 'vsg.token.function_specification.designator'>
--------------------------------------------------------------------------------
47 | None |    (signal X : in std_logic_vector;
<class 'vsg.token.function_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
48 | None |     signal Y : out std_logic) return positive is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.identifier_list.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.function_specification.close_parenthesis'>
<class 'vsg.token.function_specification.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
49 | None |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
50 | None |    end;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
51 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
52 | None | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
53 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
54 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
55 | None | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
