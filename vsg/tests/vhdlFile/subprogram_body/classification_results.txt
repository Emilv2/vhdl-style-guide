--------------------------------------------------------------------------------
0 | 
--------------------------------------------------------------------------------
1 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | architecture RTL of FIFO is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 |   procedure PARITY
<class 'vsg.token.procedure_specification.procedure_keyword'>
<class 'vsg.token.procedure_specification.designator'>
--------------------------------------------------------------------------------
5 |    (signal X : in std_logic_vector;
<class 'vsg.token.procedure_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
6 |     signal Y : out std_logic) is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.procedure_specification.close_parenthesis'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
7 |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
8 |    end procedure PARITY;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_kind.procedure_keyword'>
<class 'vsg.token.subprogram_body.designator'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
9 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
10 |   procedure PARITY
<class 'vsg.token.procedure_specification.procedure_keyword'>
<class 'vsg.token.procedure_specification.designator'>
--------------------------------------------------------------------------------
11 |    (signal X : in std_logic_vector;
<class 'vsg.token.procedure_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
12 |     signal Y : out std_logic) is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.procedure_specification.close_parenthesis'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
13 |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
14 |    end procedure;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_kind.procedure_keyword'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
15 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
16 |   procedure PARITY
<class 'vsg.token.procedure_specification.procedure_keyword'>
<class 'vsg.token.procedure_specification.designator'>
--------------------------------------------------------------------------------
17 |    (signal X : in std_logic_vector;
<class 'vsg.token.procedure_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
18 |     signal Y : out std_logic) is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.procedure_specification.close_parenthesis'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
19 |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
20 |    end PARITY;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_body.designator'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
21 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
22 |   procedure PARITY
<class 'vsg.token.procedure_specification.procedure_keyword'>
<class 'vsg.token.procedure_specification.designator'>
--------------------------------------------------------------------------------
23 |    (signal X : in std_logic_vector;
<class 'vsg.token.procedure_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
24 |     signal Y : out std_logic) is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.procedure_specification.close_parenthesis'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
25 |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
26 |    end;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
27 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
28 |   function PARITY
<class 'vsg.token.function_specification.function_keyword'>
<class 'vsg.token.function_specification.designator'>
--------------------------------------------------------------------------------
29 |    (signal X : in std_logic_vector;
<class 'vsg.token.function_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
30 |     signal Y : out std_logic) return integer is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.function_specification.close_parenthesis'>
<class 'vsg.token.function_specification.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
31 |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
32 |    end function PARITY;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_kind.function_keyword'>
<class 'vsg.token.subprogram_body.designator'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
33 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
34 |   function PARITY
<class 'vsg.token.function_specification.function_keyword'>
<class 'vsg.token.function_specification.designator'>
--------------------------------------------------------------------------------
35 |    (signal X : in std_logic_vector;
<class 'vsg.token.function_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
36 |     signal Y : out std_logic) return string is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.function_specification.close_parenthesis'>
<class 'vsg.token.function_specification.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
37 |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
38 |    end function;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_kind.function_keyword'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
39 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
40 |   function PARITY
<class 'vsg.token.function_specification.function_keyword'>
<class 'vsg.token.function_specification.designator'>
--------------------------------------------------------------------------------
41 |    (signal X : in std_logic_vector;
<class 'vsg.token.function_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
42 |     signal Y : out std_logic) return natural is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.function_specification.close_parenthesis'>
<class 'vsg.token.function_specification.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
43 |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
44 |    end PARITY;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_body.designator'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
45 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
46 |   function PARITY
<class 'vsg.token.function_specification.function_keyword'>
<class 'vsg.token.function_specification.designator'>
--------------------------------------------------------------------------------
47 |    (signal X : in std_logic_vector;
<class 'vsg.token.function_specification.open_parenthesis'>
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.in_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.interface_list.semicolon'>
--------------------------------------------------------------------------------
48 |     signal Y : out std_logic) return positive is
<class 'vsg.token.interface_signal_declaration.signal_keyword'>
<class 'vsg.token.interface_signal_declaration.identifier'>
<class 'vsg.token.interface_signal_declaration.colon'>
<class 'vsg.token.mode.out_keyword'>
<class 'vsg.token.interface_signal_declaration.subtype_indication'>
<class 'vsg.token.function_specification.close_parenthesis'>
<class 'vsg.token.function_specification.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.subprogram_body.is_keyword'>
--------------------------------------------------------------------------------
49 |    begin
<class 'vsg.token.subprogram_body.begin_keyword'>
--------------------------------------------------------------------------------
50 |    end;
<class 'vsg.token.subprogram_body.end_keyword'>
<class 'vsg.token.subprogram_body.semicolon'>
--------------------------------------------------------------------------------
51 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
52 | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
53 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
54 | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
55 | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
