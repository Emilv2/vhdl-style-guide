--------------------------------------------------------------------------------
0 | None | 
--------------------------------------------------------------------------------
1 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | None | entity BLOCK_EXAMPLE is
<class 'vsg.token.entity_declaration.entity_keyword'>
<class 'vsg.token.entity_declaration.identifier'>
<class 'vsg.token.entity_declaration.is_keyword'>
--------------------------------------------------------------------------------
3 | None | end entity BLOCK_EXAMPLE;
<class 'vsg.token.entity_declaration.end_keyword'>
<class 'vsg.token.entity_declaration.end_entity_keyword'>
<class 'vsg.token.entity_declaration.entity_simple_name'>
<class 'vsg.token.entity_declaration.semicolon'>
--------------------------------------------------------------------------------
4 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
5 | None | architecture RTL of BLOCK_EXAMPLE is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
6 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
7 | None | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
8 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
9 | None |   BLK : block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
10 | None |   begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
11 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
12 | None |     LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
13 | None |       report "This is a string"
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
14 | None |       severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
15 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
16 | None |     -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
17 | None |     a <= b;
<class 'vsg.token.concurrent_simple_signal_assignment.target'>
<class 'vsg.token.concurrent_simple_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_simple_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
18 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
19 | None |     GEN : for ii in 0 to 7 generate
<class 'vsg.token.for_generate_statement.label_name'>
<class 'vsg.token.for_generate_statement.label_colon'>
<class 'vsg.token.for_generate_statement.for_keyword'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.token.for_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
20 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
21 | None |       -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
22 | None |       a <= b when 'a' else
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
23 | None |            c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
24 | None |            d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
25 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
26 | None |       LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
27 | None |         report "This is a string"
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
28 | None |         severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
29 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
30 | None |       BLK2 : block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
31 | None |       begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
32 | None |         assert TRUE
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
33 | None |           report "This is a string"
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
34 | None |           severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
35 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
36 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
37 | None |         -- Basic version
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
38 | None |         with sel select
<class 'vsg.token.concurrent_selected_signal_assignment.with_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.select_keyword'>
--------------------------------------------------------------------------------
39 | None |           out1 <= a when "00",
<class 'vsg.token.concurrent_selected_signal_assignment.target'>
<class 'vsg.token.concurrent_selected_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
40 | None |                   b when "01",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
41 | None |                   c when "10",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
42 | None |                   d when others;
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
43 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
44 | None |         GEN2 : for jj in 0 to 7 generate
<class 'vsg.token.for_generate_statement.label_name'>
<class 'vsg.token.for_generate_statement.label_colon'>
<class 'vsg.token.for_generate_statement.for_keyword'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.token.for_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
45 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
46 | None |           -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
47 | None |           simple_label : a <= b;
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_simple_signal_assignment.target'>
<class 'vsg.token.concurrent_simple_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_simple_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
48 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
49 | None |           assert TRUE
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
50 | None |             report "This is a string"
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
51 | None |             severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
52 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
53 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
54 | None |         end generate GEN2;
<class 'vsg.token.for_generate_statement.end_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_label'>
<class 'vsg.token.for_generate_statement.semicolon'>
--------------------------------------------------------------------------------
55 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
56 | None |       end block BLK2;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
57 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
58 | None |     end generate GEN;
<class 'vsg.token.for_generate_statement.end_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_label'>
<class 'vsg.token.for_generate_statement.semicolon'>
--------------------------------------------------------------------------------
59 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
60 | None |   end block BLK;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
61 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
62 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
63 | None |   BLK : block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
64 | None |   begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
65 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
66 | None |     -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
67 | None |     conditional_label : a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
68 | None |          c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
69 | None |          d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
70 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
71 | None |     IF_GEN_LABEL: if a = x generate
<class 'vsg.token.if_generate_statement.label_name'>
<class 'vsg.token.if_generate_statement.label_colon'>
<class 'vsg.token.if_generate_statement.if_keyword'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
72 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
73 | None |         -- Basic version
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
74 | None |         select_label : with sel select
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_selected_signal_assignment.with_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.select_keyword'>
--------------------------------------------------------------------------------
75 | None |           out1 <= a when "00",
<class 'vsg.token.concurrent_selected_signal_assignment.target'>
<class 'vsg.token.concurrent_selected_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
76 | None |                   b when "01",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
77 | None |                   c when "10",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
78 | None |                   d when others;
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
79 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
80 | None |         BLK2 : block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
81 | None |         begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
82 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
83 | None |             LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
84 | None |               report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
85 | None |             -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
86 | None |             simple_label : postponed a <= b;
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_simple_signal_assignment.target'>
<class 'vsg.token.concurrent_simple_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_simple_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
87 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
88 | None |             GEN2 : for jj in 0 to 7 generate
<class 'vsg.token.for_generate_statement.label_name'>
<class 'vsg.token.for_generate_statement.label_colon'>
<class 'vsg.token.for_generate_statement.for_keyword'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.token.for_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
89 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
90 | None |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
91 | None |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
92 | None |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
93 | None |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
94 | None |                 LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
95 | None |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
96 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
97 | None |                 BLK3: block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
98 | None |                 begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
99 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
100 | None |                   LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
101 | None |                     report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
102 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
103 | None |                 end block BLK3;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
104 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
105 | None |             end generate GEN2;
<class 'vsg.token.for_generate_statement.end_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_label'>
<class 'vsg.token.for_generate_statement.semicolon'>
--------------------------------------------------------------------------------
106 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
107 | None |             BLK4 : block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
108 | None |             begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
109 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
110 | None |               CASE_GEN_LABEL : case a & B & c generate
<class 'vsg.token.case_generate_statement.LabelName'>
<class 'vsg.token.case_generate_statement.LabelColon'>
<class 'vsg.token.case_generate_statement.CaseKeyword'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.token.case_generate_statement.GenerateKeyword'>
--------------------------------------------------------------------------------
111 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
112 | None |                 when "000" =>
<class 'vsg.token.case_generate_alternative.WhenKeyword'>
<class 'vsg.parser.item'>
<class 'vsg.token.case_generate_alternative.Assignment'>
--------------------------------------------------------------------------------
113 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
114 | None |                   LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
115 | None |                     report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
116 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
117 | None |                     -- Basic version
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
118 | None |                     select_label : postponed with sel select
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_selected_signal_assignment.with_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.select_keyword'>
--------------------------------------------------------------------------------
119 | None |                       out1 <= a when "00",
<class 'vsg.token.concurrent_selected_signal_assignment.target'>
<class 'vsg.token.concurrent_selected_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
120 | None |                               b when "01",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
121 | None |                               c when "10",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
122 | None |                               d when others;
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
123 | None |                     BLK4A : block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
124 | None |                     begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
125 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
126 | None |                       LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
127 | None |                         report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
128 | None |                       -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
129 | None |                       postponed a <= b;
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_simple_signal_assignment.target'>
<class 'vsg.token.concurrent_simple_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_simple_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
130 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
131 | None |                     end block BLK4A;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
132 | None |                 when "001" =>
<class 'vsg.token.case_generate_alternative.WhenKeyword'>
<class 'vsg.parser.item'>
<class 'vsg.token.case_generate_alternative.Assignment'>
--------------------------------------------------------------------------------
133 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
134 | None |                   -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
135 | None |                   postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
136 | None |                        c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
137 | None |                        d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
138 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
139 | None |                   IF_GEN_LABELA: if a = y generate
<class 'vsg.token.if_generate_statement.label_name'>
<class 'vsg.token.if_generate_statement.label_colon'>
<class 'vsg.token.if_generate_statement.if_keyword'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
140 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
141 | None |                     LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
142 | None |                       severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
143 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
144 | None |                     -- Basic version
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
145 | None |                     postponed with sel select
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_selected_signal_assignment.with_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.select_keyword'>
--------------------------------------------------------------------------------
146 | None |                       out1 <= a when "00",
<class 'vsg.token.concurrent_selected_signal_assignment.target'>
<class 'vsg.token.concurrent_selected_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
147 | None |                               b when "01",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
148 | None |                               c when "10",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
149 | None |                               d when others;
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
150 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
151 | None |                     BLK4B : block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
152 | None |                     begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
153 | None |                       LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
154 | None |                         severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
155 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
156 | None |                       -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
157 | None |                       conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
158 | None |                            c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
159 | None |                            d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
160 | None |                     end block BLK4B;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
161 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
162 | None |                   end generate IF_GEN_LABELA;
<class 'vsg.token.if_generate_statement.end_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_label'>
<class 'vsg.token.if_generate_statement.semicolon'>
--------------------------------------------------------------------------------
163 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
164 | None |                end generate CASE_GEN_LABEL;
<class 'vsg.token.case_generate_statement.EndKeyword'>
<class 'vsg.token.case_generate_statement.EndGenerateKeyword'>
<class 'vsg.token.case_generate_statement.EndGenerateLabel'>
<class 'vsg.token.case_generate_statement.Semicolon'>
--------------------------------------------------------------------------------
165 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
166 | None |             end block BLK4;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
167 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
168 | None |             BLK5 : block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
169 | None |             begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
170 | None |                 postponed assert TRUE
<class 'vsg.token.concurrent_assertion_statement.postponed_keyword'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
171 | None |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
172 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
173 | None |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
174 | None |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
175 | None |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
176 | None |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
177 | None |             end block BLK5;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
178 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
179 | None |         end block BLK2;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
180 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
181 | None |     end generate IF_GEN_LABEL;
<class 'vsg.token.if_generate_statement.end_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_label'>
<class 'vsg.token.if_generate_statement.semicolon'>
--------------------------------------------------------------------------------
182 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
183 | None |     GEN : for ii in 0 to 7 generate
<class 'vsg.token.for_generate_statement.label_name'>
<class 'vsg.token.for_generate_statement.label_colon'>
<class 'vsg.token.for_generate_statement.for_keyword'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.token.for_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
184 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
185 | None |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
186 | None |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
187 | None |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
188 | None |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
189 | None |                 postponed assert TRUE
<class 'vsg.token.concurrent_assertion_statement.postponed_keyword'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
190 | None |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
191 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
192 | None |         GEN2 : for jj in 0 to 7 generate
<class 'vsg.token.for_generate_statement.label_name'>
<class 'vsg.token.for_generate_statement.label_colon'>
<class 'vsg.token.for_generate_statement.for_keyword'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.parser.item'>
<class 'vsg.token.for_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
193 | None |                 postponed assert TRUE
<class 'vsg.token.concurrent_assertion_statement.postponed_keyword'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
194 | None |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
195 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
196 | None |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
197 | None |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
198 | None |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
199 | None |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
200 | None |           IF_GEN_LABEL2 : if b = y generate
<class 'vsg.token.if_generate_statement.label_name'>
<class 'vsg.token.if_generate_statement.label_colon'>
<class 'vsg.token.if_generate_statement.if_keyword'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
201 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
202 | None |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
203 | None |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
204 | None |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
205 | None |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
206 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
207 | None |             BLK2 : block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
208 | None |             begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
209 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
210 | None |                 LABEL : postponed assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.concurrent_assertion_statement.postponed_keyword'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
211 | None |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
212 | None |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
213 | None |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
214 | None |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
215 | None |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
216 | None |             end block BLK2;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
217 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
218 | None |           elsif x = z generate
<class 'vsg.token.if_generate_statement.elsif_keyword'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.condition'>
<class 'vsg.token.if_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
219 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
220 | None |             BLK2 : block is
<class 'vsg.token.block_statement.label_name'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
221 | None |             begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
222 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
223 | None |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
224 | None |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
225 | None |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
226 | None |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
227 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
228 | None |                 LABEL : postponed assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.concurrent_assertion_statement.postponed_keyword'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
229 | None |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
230 | None |             end block BLK2;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
231 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
232 | None |         end generate IF_GEN_LABEL2;
<class 'vsg.token.if_generate_statement.end_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_label'>
<class 'vsg.token.if_generate_statement.semicolon'>
--------------------------------------------------------------------------------
233 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
234 | None |         end generate GEN2;
<class 'vsg.token.for_generate_statement.end_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_label'>
<class 'vsg.token.for_generate_statement.semicolon'>
--------------------------------------------------------------------------------
235 | None |     end generate GEN;
<class 'vsg.token.for_generate_statement.end_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_label'>
<class 'vsg.token.for_generate_statement.semicolon'>
--------------------------------------------------------------------------------
236 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
237 | None |   end block BLK;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
238 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
239 | None | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
