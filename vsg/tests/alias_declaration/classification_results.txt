--------------------------------------------------------------------------------
0 | None | 
--------------------------------------------------------------------------------
1 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | None | architecture RTL of FIFO is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
5 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
6 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
7 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
8 | None |   alias ident : std_logic_vector(3 downto 0) is write_enable [name1, name2 return integer];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.colon'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.token.alias_declaration.name'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.comma'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
9 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
10 | None |   alias ident : std_logic_vector(3 downto 0) is write_enable [name1, name2];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.colon'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.token.alias_declaration.name'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.comma'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
11 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
12 | None |   alias ident : std_logic_vector(3 downto 0) is write_enable [return integer];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.colon'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.token.alias_declaration.name'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.signature.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
13 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
14 | None |   alias ident : std_logic_vector(3 downto 0) is write_enable;
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.colon'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.token.alias_declaration.name'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
15 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
16 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
17 | None |   alias ident is write_enable [name1, name2 return integer];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.token.alias_declaration.name'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.comma'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
18 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
19 | None |   alias ident is write_enable [name1, name2];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.token.alias_declaration.name'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.comma'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
20 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
21 | None |   alias ident is write_enable [return integer];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.token.alias_declaration.name'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.signature.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
22 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
23 | None |   alias ident is write_enable;
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.token.alias_declaration.name'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
24 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
25 | None | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
26 | None | 
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
27 | None | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
